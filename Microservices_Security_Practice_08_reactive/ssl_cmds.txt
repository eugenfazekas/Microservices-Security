
##### CERTIFICATE AUTHORITY #####

#Generates a private key for the certificate authority
openssl genrsa -aes256 -passout pass:"skipperpassword" -out export/ca/ca_key.pem 2048

#Generates a public key for the certificate authority
openssl  req -new -passin pass:"skipperpassword" -key export/ca/ca_key.pem -x509 -days 3650 -out export/ca/ca_cert.pem -subj "/CN=localhost"

keytool -import -storepass skipperpassword -noprompt -file /export/ca/ca_cert.pem -alias ca -keystore /export/ca/truststore.jks

##### Kafka #####

#Generates a private key for the Kafka
openssl genrsa -aes256 -passout pass:"skipperpassword" -out export/kafka_server/app_key.pem 2048

#Generates certificate signing request (CSR) for the Kafka 
openssl req -passin pass:"skipperpassword" -new -key export/kafka_server/app_key.pem -out export/kafka_server/csr-for-app -subj "/CN=localhost"

#Generates Kafka’s certificate, which is signed by the CA	
openssl x509 -req -passin pass:"skipperpassword" -days 3650 -in export/kafka_server/csr-for-app -CA export/ca/ca_cert.pem -CAkey export/ca/ca_key.pem -set_serial 01 -out export/kafka_server/app_cert.pem

#Creates a Java keystore with Kafka’s private/public keys
openssl rsa -passin pass:"skipperpassword" -in export/kafka_server/app_key.pem -out export/kafka_server/app_key.pem

openssl pkcs12 –export –in export/kafka_server/app_cert.pem –inkey export/kafka_server/app_key.pem -passout pass:"skipperpassword" –out export/kafka_server/app.p12

keytool -importkeystore -srcstorepass skipperpassword -srckeystore export/kafka_server/app.p12 -srcstoretype pkcs12 -deststorepass skipperpassword -destkeystore export/kafka_server/kafka_server.jks -deststoretype JKS

keytool -changealias -alias "1" -destalias "kafka_server" -keystore export/kafka_server/kafka_server.jks -storepass skipperpassword

keytool -import -file export/ca/ca_cert.pem -alias ca -noprompt  -keystore export/kafka_server/kafka_server.jks -storepass skipperpassword

##### Order Processing microservice #####

#Generates a private key for the Order Processing microservice
openssl genrsa -aes256 -passout pass:"skipperpassword" -out export/orderprocessing/app_key.pem 2048

#Generates certificate signing request (CSR) for the Order Processing microservice 
openssl req -passin pass:"skipperpassword" -new -key export/orderprocessing/app_key.pem -out export/orderprocessing/csr-for-app -subj "/CN=localhost"

#Generates Order Processing microservice’s certificate, which is signed by the CA	
openssl x509 -req -passin pass:"skipperpassword" -days 3650 -in export/orderprocessing/csr-for-app -CA export/ca/ca_cert.pem -CAkey export/ca/ca_key.pem -set_serial 01 -out export/orderprocessing/app_cert.pem

#Creates a Java keystore with Order Processing microservice’s private/public keys
openssl rsa -passin pass:"skipperpassword" -in export/orderprocessing/app_key.pem -out export/orderprocessing/app_key.pem

openssl pkcs12 –export –in export/orderprocessing/app_cert.pem –inkey export/orderprocessing/app_key.pem -passout pass:"skipperpassword" –out export/orderprocessing/app.p12

keytool -importkeystore -srcstorepass skipperpassword -srckeystore export/orderprocessing/app.p12 -srcstoretype pkcs12 -deststorepass skipperpassword -destkeystore export/orderprocessing/orderprocessing.jks -deststoretype JKS

keytool -changealias -alias "1" -destalias "orderprocessing" -keystore export/orderprocessing/orderprocessing.jks -storepass skipperpassword

keytool -import -file export/ca/ca_cert.pem -alias ca -noprompt  -keystore export/orderprocessing/orderprocessing.jks -storepass skipperpassword


##### Buying_History microservice #####

#Generates a private key for the Order Processing microservice
openssl genrsa -aes256 -passout pass:"skipperpassword" -out export/buying_history/app_key.pem 2048

#Generates certificate signing request (CSR) for the buying_history microservice 
openssl req -passin pass:"skipperpassword" -new -key export/buying_history/app_key.pem -out export/buying_history/csr-for-app -subj "/CN=localhost"

#Generates Buying_History microservice’s certificate, which is signed by the CA	
openssl x509 -req -passin pass:"skipperpassword" -days 3650 -in export/buying_history/csr-for-app -CA export/ca/ca_cert.pem -CAkey export/ca/ca_key.pem -set_serial 01 -out export/buying_history/app_cert.pem

#Creates a Java keystore with Buying_History microservice’s private/public keys
openssl rsa -passin pass:"skipperpassword" -in export/buying_history/app_key.pem -out export/buying_history/app_key.pem

openssl pkcs12 –export –in export/buying_history/app_cert.pem –inkey export/buying_history/app_key.pem -passout pass:"skipperpassword" –out export/buying_history/app.p12

keytool -importkeystore -srcstorepass skipperpassword -srckeystore export/buying_history/app.p12 -srcstoretype pkcs12 -deststorepass skipperpassword -destkeystore export/buying_history/buying_history.jks -deststoretype JKS

keytool -changealias -alias "1" -destalias "buying_history" -keystore export/buying_history/buying_history.jks -storepass skipperpassword

keytool -import -file export/ca/ca_cert.pem -alias ca  -noprompt -keystore export/buying_history/buying_history.jks -storepass skipperpassword

